<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pers.blog.file.dao.CommonAttachDao">
	<resultMap id="BaseResultMap" type="com.pers.blog.bean.CommonAttach">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="file_size" property="fileSize" jdbcType="DOUBLE" />
		<result column="file_type" property="fileType" jdbcType="VARCHAR" />
		<result column="file_name" property="fileName" jdbcType="VARCHAR" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, create_time, update_time, file_size, file_type, file_name, path,
		create_user
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from common_attach
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from common_attach
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.pers.blog.bean.CommonAttach">
		insert into common_attach (id, create_time, update_time,
		file_size, file_type, file_name,
		path, create_user)
		values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{fileSize,jdbcType=DOUBLE}, #{fileType,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR},
		#{path,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.pers.blog.bean.CommonAttach">
		insert into common_attach
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="fileSize != null">
				file_size,
			</if>
			<if test="fileType != null">
				file_type,
			</if>
			<if test="fileName != null">
				file_name,
			</if>
			<if test="path != null">
				path,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="fileSize != null">
				#{fileSize,jdbcType=DOUBLE},
			</if>
			<if test="fileType != null">
				#{fileType,jdbcType=VARCHAR},
			</if>
			<if test="fileName != null">
				#{fileName,jdbcType=VARCHAR},
			</if>
			<if test="path != null">
				#{path,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.pers.blog.bean.CommonAttach">
		update common_attach
		<set>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="fileSize != null">
				file_size = #{fileSize,jdbcType=DOUBLE},
			</if>
			<if test="fileType != null">
				file_type = #{fileType,jdbcType=VARCHAR},
			</if>
			<if test="fileName != null">
				file_name = #{fileName,jdbcType=VARCHAR},
			</if>
			<if test="path != null">
				path = #{path,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.pers.blog.bean.CommonAttach">
		update common_attach
		set create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		file_size = #{fileSize,jdbcType=DOUBLE},
		file_type = #{fileType,jdbcType=VARCHAR},
		file_name = #{fileName,jdbcType=VARCHAR},
		path = #{path,jdbcType=VARCHAR},
		create_user = #{createUser,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>